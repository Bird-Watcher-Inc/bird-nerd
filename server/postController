const path = require('path');
const { User, Comment, Post } = require('./modelDB');




const postController = {};

// create a new post and return it back to the client;
postController.createNewPost = (req, res, next) => {
  const {username, textContent, birdName, location, weatherConditions} = req.body;
  const dateStamp = new Date().toLocaleString();
  Post.create({ username, textContent, birdName, dateStamp, location, weatherConditions })
    .then((data) => {
      const { username, textContent, birdName, dateStamp, location, weatherConditions } = data;
      res.locals = {
         username: username, 
         textContent: textContent, 
         birdName: birdName, 
         dateStamp: dateStamp, 
         location: location, 
         weatherConditions: weatherConditions
      };
      return next();
    })
    .catch((err) => {
      console.log(err.message);
      const error = {
        status: 400,
        message: 'Post not created',
        log: 'Error creating a post in DB'
      };
      return next(error);
    })
};

// edit existing post;
postController.editPost = (req, res, next) => {
  const { _id, newTextContent} = req.body;

  // if request from client missing post text error handling;
  if (newTextContent === undefined) {
    const error = {
      status: 406,
      log: 'Missing input from client',
      message: 'Missing post context'
    };
    return next(error);
  }

  Post.findOneAndUpdate({_id: _id}, {textContent: newTextContent}, {new: true})
    .then((data) => {
      res.locals.data = data;
      return next();
    })
    .catch((err) => {
      console.log(err.message);
      const error = {
        status: 406,
        message: 'Post not updates',
        log: 'Error updating a post in DB'
      };
      return next(error);
    })
};

// add a comment to a post;
postController.addComment = (req, res, next) => {
  
  const {post_id, username_id, comment } = req.body;
  
  if (post_id === undefined || username_id === undefined || comment === undefined) {
    const error = {
      status: 406,
      log: 'Missing input from client',
      message: 'Missing post context'
    };
    return next(error);
  };
  let comment_id;
  Comment.create({username_id, comment})
    .then((data) => {
      comment_id = data._id;
      res.locals.comment = data.comment;
      console.log(res.locals);
    })
    .catch((err) => {
      console.log(err);
      const error = {
        status: 406,
        log: 'Missing input from client',
        message: 'Missing comment context'
      };
      return next(error);
    });

  Post.findOne({_id: post_id}).populate('comments')
    .then((data) => {
      console.log(data);
      return next();
    })
    .catch((err) => {
      console.log(err);
      const error = {
        status: 406,
        log: 'Unknown error occured on updating the post comments',
        message: 'Unknown error occurred'
      };
      return next(error);
    })

}

// get all posts and return them back to the client;
postController.displayAllPosts = (req, res, next) => {
  Post.find({}, null, {limit: 30}).sort({createdAt: 1})
    .then((data) => {
      res.locals.data = data;
      return next();
    })
    .catch((err) => {
      console.log(err.message);
      const error = {
        status: 400,
        message: 'Cannot get posts',
        log: 'Error fetching posts from DB'
      };
      return next(error);
    });
};



module.exports = postController;

